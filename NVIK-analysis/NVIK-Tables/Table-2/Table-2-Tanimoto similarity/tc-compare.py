import pandas as pd
from rdkit import Chem
from rdkit.Chem import AllChem
from rdkit import DataStructs
import os

# Load the datasets
lib1_file = 'nvik.csv'
lib2_file = 'cas-renamed.csv'
lib1 = pd.read_csv(lib1_file)
lib2 = pd.read_csv(lib2_file)

# Function to calculate Tanimoto coefficient
def tanimoto_coeff(smiles1, smiles2):
    try:
        mol1 = Chem.MolFromSmiles(smiles1)
        mol2 = Chem.MolFromSmiles(smiles2)
        if mol1 is None or mol2 is None:
            return None
        fp1 = AllChem.GetMorganFingerprintAsBitVect(mol1, radius=2, nBits=1024)
        fp2 = AllChem.GetMorganFingerprintAsBitVect(mol2, radius=2, nBits=1024)
        return DataStructs.TanimotoSimilarity(fp1, fp2)
    except Exception as e:
        print(f"Error processing SMILES: {smiles1} or {smiles2}")
        print(f"Error message: {str(e)}")
        return None

# Calculate Tanimoto for all pairs and store results
results = []
high_similarity = []
errors = []

for index1, row1 in lib1.iterrows():
    for index2, row2 in lib2.iterrows():
        tc = tanimoto_coeff(row1['smiles'], row2['smiles'])
        if tc is not None:
            results.append({
                'Name1': row1['name'],
                'Name2': row2['name'],
                'TanimotoCoefficient': tc
            })
            if tc > 0.8:
                high_similarity.append({
                    'name1': row1['name'],
                    'name2': row2['name'],
                    'TanimotoCoefficient': tc
                })
        else:
            errors.append({
                'Name1': row1['name'],
                'SMILES1': row1['smiles'],
                'Name2': row2['name'],
                'SMILES2': row2['smiles']
            })

# Convert to DataFrame
df_results = pd.DataFrame(results)
df_high_similarity = pd.DataFrame(high_similarity)
df_errors = pd.DataFrame(errors)

# Generate output file names
lib1_name = os.path.splitext(os.path.basename(lib1_file))[0]
lib2_name = os.path.splitext(os.path.basename(lib2_file))[0]
output_all = f'tanimoto_coefficients_{lib1_name}_vs_{lib2_name}.csv'
output_high = f'high_similarity_pairs_{lib1_name}_vs_{lib2_name}.csv'
output_errors = f'processing_errors_{lib1_name}_vs_{lib2_name}.csv'

# Save to CSV
df_results.to_csv(output_all, index=False)
df_high_similarity.to_csv(output_high, index=False)
df_errors.to_csv(output_errors, index=False)

print(f"All Tanimoto coefficients saved to: {output_all}")
print(f"High similarity pairs saved to: {output_high}")
print(f"Processing errors saved to: {output_errors}")
print(f"Total pairs processed: {len(results)}")
print(f"Total errors encountered: {len(errors)}")


#The above code was partially generated by Claude, an AI assistant created by Anthropic.
#It has been modified and verified for use in this project.